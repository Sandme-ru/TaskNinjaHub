@page "/task-read/{Id:int}"

<PageTitle>Task card</PageTitle>

@if (SelectedCatalogTask != null)
{
    <button class="back-button" @onclick="GoBack">Go back</button>

    <div class="card">
        
        <div>
            <Steps>
                @switch (SelectedCatalogTask.TaskStatusId)
                {
                    case (int)EnumTaskStatus.AwaitingExecution:
                        <Step Status="finish" Title="Awaiting execution" Icon="user"/>
                        <Step Status="process" Title="At work" Icon="solution" />
                        <Step Status="wait" Title="Awaiting verification" Icon="bulb" />
                        <Step Status="wait" Title="Done" Icon="smile" />
                        break;
                    case (int)EnumTaskStatus.AtWork:
                        <Step Status="finish" Title="Awaiting execution" Icon="user"/>
                        <Step Status="finish" Title="At work" Icon="solution" />
                        <Step Status="process" Title="Awaiting verification" Icon="bulb" />
                        <Step Status="wait" Title="Done" Icon="smile" />
                        break;
                    case (int)EnumTaskStatus.AwaitingVerification:
                        <Step Status="finish" Title="Awaiting execution" Icon="user"/>
                        <Step Status="finish" Title="At work" Icon="solution" />
                        <Step Status="finish" Title="Awaiting verification" Icon="bulb" />
                        <Step Status="process" Title="Done" Icon="smile" />
                        break;
                    case (int)EnumTaskStatus.Done:
                        <Step Status="finish" Title="Awaiting execution" Icon="user"/>
                        <Step Status="finish" Title="At work" Icon="solution" />
                        <Step Status="finish" Title="Awaiting verification" Icon="bulb" />
                        <Step Status="finish" Title="Done" Icon="smile" />
                        break;
                }
            </Steps>
        </div>

        <table class="task-table">
            <tr>
                <td><strong>Name:</strong></td>
                <td>@SelectedCatalogTask.Name</td>
            </tr>
            <tr>
                <td><strong>Description:</strong></td>
                <td>@SelectedCatalogTask.Description</td>
            </tr>
            <tr>
                <td><strong>Information System:</strong></td>
                <td>@SelectedCatalogTask.InformationSystem?.Name</td>
            </tr>
            <tr>
                <td><strong>Task Executor:</strong></td>
                <td>@SelectedCatalogTask.TaskExecutor?.Name</td>
            </tr>
        </table>

        @if (MainRelatedTasks != null || SubordinateRelatedTasks != null)
        {
            <div class="related-tasks">
                <h3 class="related-tasks-header">
                    <span class="related-tasks-header-text">Related tasks</span>
                    <button class="toggle-button" @onclick="ToggleRelatedTasks">
                        @if (ShowRelatedTasks)
                        {
                            <i class="fas fa-chevron-up"></i>
                        }
                        else
                        {
                            <i class="fas fa-chevron-down"></i>
                        }
                    </button>
                </h3>
                @if (ShowRelatedTasks)
                {
                    <div class="related-tasks-list">
                        @if (MainRelatedTasks != null)
                        {
                            foreach (var task in MainRelatedTasks)
                            {
                                <NavLink class="related-task-link" @onclick="() => NavigateToSubordinateTask(task)">
                                    <i class="fas fa-external-link-alt"></i>
                                    <span>@task.SubordinateTask?.Name</span>

                                </NavLink>
                            }
                        }

                        @if (SubordinateRelatedTasks != null)
                        {
                            foreach (var task in SubordinateRelatedTasks)
                            {
                                <NavLink class="related-task-link" @onclick="() => NavigateToMainTask(task)">
                                    <i class="fas fa-external-link-alt"></i>
                                    <span>@task.MainTask?.Name</span>
                                </NavLink>
                            }
                        }
                    </div>
                }
            </div>
        }

        @if (HtmlMarkupForTask != null)
        {
            <AntList DataSource="@HtmlMarkupForTask" Bordered>
                <ListItem class="history_of_changes">
                    @((MarkupString)context)
                </ListItem>
            </AntList>
        }
        <Upload Action="https://www.mocky.io/v2/5cc8019d300000980a055e76"
                Name="avatar"
                OnRemove="(_) => Task.FromResult(false)"
                ShowButton="false"
                @bind-FileList="DefaultFileList"
                ListType="picture-card"
                OnPreview="(file) => { if (file.IsPicture()) { PreviewVisible = true; PreviewTitle = file.FileName; ImgUrl = file.Url; }else NavigationManager.NavigateTo(file.Url); }">
        </Upload>
        <Modal Visible="PreviewVisible"
               Title="@PreviewTitle"
               OnCancel="() => PreviewVisible = false"
               OnOk="() => NavigationManager.NavigateTo(ImgUrl)"
               OkText="@("Download")"
               CancelText="@("Cancel")">
            <img style="width: 100%" src="@ImgUrl"/>
        </Modal>
    </div>
}

<style>
    .related-tasks {
        margin-top: 20px;
    }

    .related-tasks-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .related-tasks-header-text {
        margin-right: 10px;
    }

    .toggle-button {
        background-color: transparent;
        border: none;
        cursor: pointer;
    }

    .related-tasks-list {
        margin-top: 10px;
    }

    .related-task-link {
        display: block;
        padding: 5px;
        margin-bottom: 5px;
        background-color: #f8f9fa;
        border-radius: 5px;
        color: #333;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .related-task-link:hover {
            background-color: #e9ecef;
        }

        .related-task-link i {
            margin-left: 5px;
        }
</style>